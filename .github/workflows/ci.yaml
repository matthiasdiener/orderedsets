name: CI

on:
  pull_request:
  push:
    branches: main
  schedule:
  - cron:  '5 0 * * *'

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Ruff check
      run: |
        python -m pip install ruff
        ruff check

  mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.x
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Run mypy
      run: |
        set -x
        python -m pip install mypy pytest importlib_metadata
        python -m pip install -e .
        ./run-mypy.sh

  typos:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: crate-ci/typos@master

  pylint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Run Pylint
      run: |
        set -x
        python -m pip install pylint PyYAML pytest
        python -m pip install -e .
        ./run-pylint.sh

  pydocstyle:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Run Pydocstyle
        run: |
          set -x
          python -m pip install pydocstyle
          python -m pydocstyle "$(basename $GITHUB_REPOSITORY)" && echo "pydocstyle found no errors."

  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "pypy3.9", "pypy3.10"]
        os: [ubuntu-22.04, macos-13]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run Pytest
      run: |
        set -x
        python -m pip install pytest pytest-cov
        python -m pip install -e .
        cd test
        python -m pytest --doctest-modules --cov=orderedsets --durations=5 --tb=native -rxsw --cov-fail-under=100 --cov-report=term-missing -v .

  examples:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-22.04, macos-13]  # need these older versions for Py3.7
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run examples
      run: |
        set -x
        python -m pip install -e .
        cd examples
        for f in *.py; do [[ $f == "speed.py" ]] && continue; echo Running $f; python $f; done
    - name: Run speed.py
      if: matrix.python-version < '3.10'
      run: |
        set -x
        python -m pip install stableset orderedset
        cd examples
        python speed.py


  downstream_tests:
    strategy:
      matrix:
          downstream_project: [pytato]
    name: Tests for downstream project ${{ matrix.downstream_project }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
    - name: "Main Script"
      env:
        DOWNSTREAM_PROJECT: ${{ matrix.downstream_project }}
      run: |
        set -x

        [[ $(uname) == Linux ]] && sudo apt-get update && sudo apt-get install -y openmpi-bin libopenmpi-dev libegl1
        [[ $(uname) == Darwin ]] && brew install openmpi

        python -m pip install -e .

        cd ..

        git clone https://github.com/illinois-ceesd/emirge
        cd emirge
        ./install.sh
        source config/activate_env.sh

        cd $DOWNSTREAM_PROJECT

        ./run-mypy.sh
        python -m pytest --tb=native -rxsw -v .
