name: CI

on:
  pull_request:
  push:
    branches: main
  schedule:
  - cron:  '5 0 * * *'

jobs:
  flake8:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Flake8 test
      run: |
        python -m pip install flake8 pep8-naming flake8-quotes flake8-bugbear flake8-pyproject flake8-isort
        python -m flake8 --show-source --statistics "$(basename $GITHUB_REPOSITORY)" test && echo "Flake8 found no errors."

  mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.x
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Run mypy
      run: |
        python -m pip install mypy pytest
        pip install -e .
        mypy --strict orderedsets
        mypy test

    # pylint:
    #     name: Pylint
    #     runs-on: ubuntu-latest
    #     steps:
    #     - uses: actions/checkout@v3
    #     -
    #       uses: actions/setup-python@v4
    #       with:
    #         python-version: '3.x'
    #     - name: Install
    #       run: |
    #         . .ci-support/install.sh

    #     - name: Run Pylint
    #       run: |
    #         MINIFORGE_INSTALL_DIR=.miniforge3
    #         . "$MINIFORGE_INSTALL_DIR/bin/activate" testing
    #         ./run-pylint.sh

    # pydocstyle:
    #     runs-on: ubuntu-latest
    #     steps:
    #     - uses: actions/checkout@v3
    #     -
    #       uses: actions/setup-python@v4
    #       with:
    #         python-version: '3.x'
    #     - name: Run Pydocstyle
    #       run: |
    #         python3 -m venv myenv
    #         source myenv/bin/activate
    #         python -m pip install wheel
    #         python -m pip install pydocstyle
    #         python -m pydocstyle "$(basename $GITHUB_REPOSITORY)" && echo "pydocstyle found no errors."

  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run Pytest
      run: |
        python -m pip install pytest pytest-cov
        pip install -e .
        cd test
        python -m pytest --cov=orderedsets --durations=0 --tb=native -rxsw .

    # doc:
    #     name: Documentation
    #     runs-on: ubuntu-latest
    #     steps:
    #     - uses: actions/checkout@v3
    #     - name: Set up Python 3.x
    #       uses: actions/setup-python@v4
    #       with:
    #         python-version: '3.x'
    #     - name: Build docs
    #       run: |
    #         set -x
    #         pip install sphinx-math-dollar sphinx-copybutton furo
    #         cd doc
    #         make html SPHINXOPTS="-W --keep-going -n"
    #         make latexpdf SPHINXOPTS="-W --keep-going -n"
